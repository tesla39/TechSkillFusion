1. git init

2. git add . or git add filename

3. git commit -m “message”

4. git status

5.git remote -v  =>shows remote url

6.ls -al ~/.ssh   =>shows all ssh key

7.git remote add origin [url]

8.a.git push origin [branch name]   =>[branch name] is master by default
    b.git push origin [branch name]=>if git is pushed upload changes made 
     c.git checkout <branch-name>=>switch between branch


9.git clone url

11.git branch [branch name]  =>to create a branch

12.git branch -D [branch name]   =>to delete a branch

13.eval "$(ssh-agent -s)"  =>ensures ssh key is running

14.git restore <filename> =>restores deleted filename

15.git reset --hard =>rollback to previous state when last commit was done

16.git remote remove origin => to remove previous origin url

17.git remote set url origin <url> => to overwrite existing origin url

.git pull origin <branch-name>

18.git log =>to pull up the branch’s history.

19.git reset =>to change the repository to the commit.

20.git revert =>create a new commit with the previous edits rather than delete commits from the history.

21.git merge --squash =>command that can merge multiple commits of a branch. 

22.git commit --fixup => marks the commit as a fix of the previous commit. 

23.git rebase -i --autosquash => is a rebase type of squash for merging multiple commits.

24.git bisect =>identify the first commit to introduce a bug by using automatic binary search.

25.git blame =>identifies the author of a commit

26.git grep=> searches for any string or regular expression in any of the files in the staging area.

